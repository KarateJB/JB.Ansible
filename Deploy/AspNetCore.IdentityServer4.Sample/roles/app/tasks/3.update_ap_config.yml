- name: Create temp directory for configuration files
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    group: root
    owner: root
  with_items:
    - "/tmp/deploy/Auth/"
    - "/tmp/deploy/Backend"

# For advanced inventory/vars usage (group_vars/hosts_vars/hosts),
# No need to include vars file manually as following. Cus Ansible will load group_vars/<The value of hosts in playbook> automatically.
# If you want include other vars file, use the following way or use vars_files in playbook.
# - name: Include vars file
#   include_vars: "{{ env }}.yml"
  
- name: Generate Auth Server's AppSettings file
  template:
    src: AppSettings/AppSettings.Auth.j2
    dest: "{{ deploy_temp_path }}/Auth/{{ appsettings_file_name }}"

- name: Generate Backend's AppSettings file
  template:
    src: AppSettings/AppSettings.WebApi.j2
    dest: "{{ deploy_temp_path }}/Backend/{{ appsettings_file_name }}"

- name: Generate Backend's javascript config file
  template:
    src: Js/Js.AppConfig.j2
    dest: "{{ deploy_temp_path }}/Backend/app-config.js"    

- name: Copy to containers and overwrite
  command: "{{ item }}"
  with_items:
    - docker cp {{ deploy_temp_path }}/Auth/{{ appsettings_file_name }} idsrv-auth:/app
    - docker cp {{ deploy_temp_path }}/Backend/{{ appsettings_file_name }} idsrv-backend:/app
    - docker cp {{ deploy_temp_path }}/Backend/app-config.js idsrv-backend:/app/wwwroot/js
  register: appsettings_are_updated

- name: Restart modified containers
  command: "docker restart {{ item }}"
  with_items:
    - idsrv-auth
    - idsrv-backend
  when: appsettings_are_updated is succeeded

- name: Delete temparary AppSettings file
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/deploy/Auth/{{ appsettings_file_name }}
    - /tmp/deploy/Backend/{{ appsettings_file_name }}
  retries: 3
  delay: 3
  register: temp_configs_are_deleted
  until: temp_configs_are_deleted is succeeded